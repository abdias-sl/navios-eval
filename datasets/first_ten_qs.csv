"id","payload","created_at"
e87f370a-6da9-40cc-a2ab-ab45f9c0e3b9,"{""id"": [""langchain_core"", ""messages"", ""AIMessageChunk""], ""lc"": 1, ""type"": ""constructor"", ""event"": ""agentAction"", ""kwargs"": {""id"": ""msg_01Wk2gtHrWkPxAp5VZxKYdup"", ""content"": [{""text"": ""I'll find information about Paul Graham's experience at Interleaf, focusing on their software features and his role there."", ""type"": ""text"", ""index"": 0}, {""id"": ""toolu_01LRJqtf3r49Zyg5H5NnwV5C"", ""name"": ""paul_graham_Knowledge_Base"", ""type"": ""tool_use"", ""index"": 1, ""input"": ""{\""input\"": \""Paul Graham Interleaf software feature role performance\""}""}], ""tool_calls"": [{""id"": ""toolu_01LRJqtf3r49Zyg5H5NnwV5C"", ""args"": {""input"": ""Paul Graham Interleaf software feature role performance""}, ""name"": ""paul_graham_Knowledge_Base"", ""type"": ""tool_call""}], ""usage_metadata"": {""input_tokens"": 4610, ""total_tokens"": 4703, ""output_tokens"": 93, ""input_token_details"": {""cache_read"": 0, ""cache_creation"": 0}}, ""tool_call_chunks"": [{""id"": ""toolu_01LRJqtf3r49Zyg5H5NnwV5C"", ""args"": ""{\""input\"": \""Paul Graham Interleaf software feature role performance\""}"", ""name"": ""paul_graham_Knowledge_Base"", ""index"": 1}], ""additional_kwargs"": {""id"": ""msg_01Wk2gtHrWkPxAp5VZxKYdup"", ""role"": ""assistant"", ""type"": ""message"", ""model"": ""claude-3-7-sonnet-20250219"", ""stop_reason"": ""tool_use"", ""stop_sequence"": null}, ""response_metadata"": {""usage"": {""service_tier"": ""standard"", ""cache_read_input_tokens"": 0, ""cache_creation_input_tokens"": 0}}, ""invalid_tool_calls"": []}}",2025-06-20 03:08:30.537 -0600
e87f370a-6da9-40cc-a2ab-ab45f9c0e3b9,"{""agent"": ""ShyftOS Agent"", ""chunk"": {""tools"": {""messages"": [{""id"": [""langchain_core"", ""messages"", ""ToolMessage""], ""lc"": 1, ""type"": ""constructor"", ""kwargs"": {""id"": ""run-8dea7096-82d0-4ba8-a540-78347decb37c-tool-toolu_01LRJqtf3r49Zyg5H5NnwV5C"", ""name"": ""paul_graham_Knowledge_Base"", ""content"": ""[{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""Interleaf had done something pretty bold. Inspired by Emacs, they'd added a scripting language, and even made the scripting language a dialect of Lisp. Now they wanted a Lisp hacker to write things in it. This was the closest thing I've had to a normal job, and I hereby apologize to my boss and coworkers, because I was a bad employee. Their Lisp was the thinnest icing on a giant C cake, and since I didn't know C and didn't want to learn it, I never understood most of the software. Plus I was terribly irresponsible. This was back when a programming job meant showing up every day during certain working hours. That seemed unnatural to me, and on this point the rest of the world is coming around to my way of thinking, but at the time it caused a lot of friction. Toward the end of the year I spent much of my time surreptitiously working on On Lisp, which I had by this time gotten a contract to publish.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I was nervous about money, because I could sense that Interleaf was on the way down. Freelance Lisp hacking work was very rare, and I didn't want to have to program in another language, which in those days would have meant C++ if I was lucky. So with my unerring nose for financial opportunity, I decided to write another book on Lisp. This would be a popular book, the sort of book that could be used as a textbook. I imagined myself living frugally off the royalties and spending all my time painting. (The painting on the cover of this book, ANSI Common Lisp, is one that I painted around this time.)\\\\n\\\\nThe best thing about New York for me was the presence of Idelle and Julian Weber. Idelle Weber was a painter, one of the early photorealists, and I'd taken her painting class at Harvard. I've never known a teacher more beloved by her students. Large numbers of former students kept in touch with her, including me. After I moved to New York I became her de facto studio assistant.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I learned some useful things at Interleaf, though they were mostly about what not to do. I learned that it's better for technology companies to be run by product people than sales people (though sales is a real skill and people who are good at it are really good at it), that it leads to bugs when code is edited by too many people, that cheap office space is no bargain if it's depressing, that planned meetings are inferior to corridor conversations, that big, bureaucratic customers are a dangerous source of money, and that there's not much overlap between conventional office hours and the optimal time for hacking, or conventional offices and the optimal place for it.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""Our teacher, professor Ulivi, was a nice guy. He could see I worked hard, and gave me a good grade, which he wrote down in a sort of passport each student had. But the Accademia wasn't teaching me anything except Italian, and my money was running out, so at the end of the first year I went back to the US.\\\\n\\\\nI wanted to go back to RISD, but I was now broke and RISD was very expensive, so I decided to get a job for a year and then return to RISD the next fall. I got one at a company called Interleaf, which made software for creating documents. You mean like Microsoft Word? Exactly. That was how I learned that low end software tends to eat high end software. But Interleaf still had a few years to live yet. [5]\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""But the most important thing I learned, and which I used in both Viaweb and Y Combinator, is that the low end eats the high end: that it's good to be the \\\\\\\""entry level\\\\\\\"" option, even though that will be less prestigious, because if you're not, someone else will be, and will squash you against the ceiling. Which in turn means that prestige is a danger sign.\\\\n\\\\nWhen I left to go back to RISD the next fall, I arranged to do freelance work for the group that did projects for customers, and this was how I survived for the next several years. When I came back to visit for a project later on, someone told me about a new thing called HTML, which was, as he described it, a derivative of SGML. Markup language enthusiasts were an occupational hazard at Interleaf and I ignored him, but this HTML thing later became a big part of my life.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""The subset I would build as an open source project was the new Lisp, whose parentheses I now wouldn't even have to hide. A lot of Lisp hackers dream of building a new Lisp, partly because one of the distinctive features of the language is that it has dialects, and partly, I think, because we have in our minds a Platonic form of Lisp that all existing dialects fall short of. I certainly did. So at the end of the summer Dan and I switched to working on this new dialect of Lisp, which I called Arc, in a house I bought in Cambridge.\\\\n\\\\nThe following spring, lightning struck. I was invited to give a talk at a Lisp conference, so I gave one about how we'd used Lisp at Viaweb. Afterward I put a postscript file of this talk online, on paulgraham.com, which I'd created years before using Viaweb but had never used for anything. In one day it got 30,000 page views. What on earth had happened? The referring urls showed that someone had posted it on Slashdot. [10]\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I realize that sounds rather wimpy. But attention is a zero sum game. If you can choose what to work on, and you choose a project that's not the best one (or at least a good one) for you, then it's getting in the way of another project that is. And at 50 there was some opportunity cost to screwing around.\\\\n\\\\nI started writing essays again, and wrote a bunch of new ones over the next few months. I even wrote a couple that weren't about startups. Then in March 2015 I started working on Lisp again.\\\\n\\\\nThe distinctive thing about Lisp is that its core is a language defined by writing an interpreter in itself. It wasn't originally intended as a programming language in the ordinary sense. It was meant to be a formal model of computation, an alternative to the Turing machine. If you want to write an interpreter for a language in itself, what's the minimum set of predefined operators you need? The Lisp that John McCarthy invented, or more accurately discovered, is an answer to that question. [19]\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""Hmph. Well, I'd do it myself then. I recruited Dan Giffin, who had worked for Viaweb, and two undergrads who wanted summer jobs, and we got to work trying to build what it's now clear is about twenty companies and several open source projects worth of software. The language for defining applications would of course be a dialect of Lisp. But I wasn't so naive as to assume I could spring an overt Lisp on a general audience; we'd hide the parentheses, like Dylan did.\\\\n\\\\nBy then there was a name for the kind of company Viaweb was, an \\\\\\\""application service provider,\\\\\\\"" or ASP. This name didn't last long before it was replaced by \\\\\\\""software as a service,\\\\\\\"" but it was current for long enough that I named this new company after it: it was going to be called Aspra.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I had to ban myself from writing essays during most of this time, or I'd never have finished. In late 2015 I spent 3 months writing essays, and when I went back to working on Bel I could barely understand the code. Not so much because it was badly written as because the problem is so convoluted. When you're working on an interpreter written in itself, it's hard to keep track of what's happening at what level, and errors can be practically encrypted by the time you get them.\\\\n\\\\nSo I said no more essays till Bel was done. But I told few people about Bel while I was working on it. So for years it must have seemed that I was doing nothing, when in fact I was working harder than I'd ever worked on anything. Occasionally after wrestling for hours with some gruesome bug I'd check Twitter or HN and see someone asking \\\\\\\""Does Paul Graham still code?\\\\\\\""\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""This kind of software, known as a web app, is common now, but at the time it wasn't clear that it was even possible. To find out, we decided to try making a version of our store builder that you could control through the browser. A couple days later, on August 12, we had one that worked. The UI was horrible, but it proved you could build a whole store through the browser, without any client software or typing anything into the command line on the server.\\\\n\\\\nNow we felt like we were really onto something. I had visions of a whole new generation of software working this way. You wouldn't need versions, or ports, or any of that crap. At Interleaf there had been a whole group called Release Engineering that seemed to be at least as big as the group that actually wrote the software. Now you could just update the software right on the server.\\\""}\""}]"", ""tool_call_id"": ""toolu_01LRJqtf3r49Zyg5H5NnwV5C"", ""additional_kwargs"": {}, ""response_metadata"": {}}}]}}, ""event"": ""toolResult""}",2025-06-20 03:08:31.619 -0600
"5abb245a-3680-4a40-bbae-25bf427f7377","{""id"": [""langchain_core"", ""messages"", ""AIMessageChunk""], ""lc"": 1, ""type"": ""constructor"", ""event"": ""agentAction"", ""kwargs"": {""id"": ""msg_01HJzzFStXwqcyerMyXYKvvr"", ""content"": [{""text"": ""I'll look up information about Paul Graham's experience with painting still lives in his essay. Let me search for that specific content."", ""type"": ""text"", ""index"": 0}, {""id"": ""toolu_012KNw9MYeXeTpXorN67UjiK"", ""name"": ""paul_graham_Knowledge_Base"", ""type"": ""tool_use"", ""index"": 1, ""input"": ""{\""input\"": \""Paul Graham painting still life visual perception\""}""}], ""tool_calls"": [{""id"": ""toolu_012KNw9MYeXeTpXorN67UjiK"", ""args"": {""input"": ""Paul Graham painting still life visual perception""}, ""name"": ""paul_graham_Knowledge_Base"", ""type"": ""tool_call""}], ""usage_metadata"": {""input_tokens"": 4609, ""total_tokens"": 4700, ""output_tokens"": 91, ""input_token_details"": {""cache_read"": 0, ""cache_creation"": 0}}, ""tool_call_chunks"": [{""id"": ""toolu_012KNw9MYeXeTpXorN67UjiK"", ""args"": ""{\""input\"": \""Paul Graham painting still life visual perception\""}"", ""name"": ""paul_graham_Knowledge_Base"", ""index"": 1}], ""additional_kwargs"": {""id"": ""msg_01HJzzFStXwqcyerMyXYKvvr"", ""role"": ""assistant"", ""type"": ""message"", ""model"": ""claude-3-7-sonnet-20250219"", ""stop_reason"": ""tool_use"", ""stop_sequence"": null}, ""response_metadata"": {""usage"": {""service_tier"": ""standard"", ""cache_read_input_tokens"": 0, ""cache_creation_input_tokens"": 0}}, ""invalid_tool_calls"": []}}",2025-06-20 03:07:59.597 -0600
"5abb245a-3680-4a40-bbae-25bf427f7377","{""agent"": ""ShyftOS Agent"", ""chunk"": {""tools"": {""messages"": [{""id"": [""langchain_core"", ""messages"", ""ToolMessage""], ""lc"": 1, ""type"": ""constructor"", ""kwargs"": {""id"": ""run-d166196e-a64e-494d-9f2d-5252dc12303f-tool-toolu_012KNw9MYeXeTpXorN67UjiK"", ""name"": ""paul_graham_Knowledge_Base"", ""content"": ""[{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I liked painting still lives because I was curious about what I was seeing. In everyday life, we aren't consciously aware of much we're seeing. Most visual perception is handled by low-level processes that merely tell your brain \\\\\\\""that's a water droplet\\\\\\\"" without telling you details like where the lightest and darkest points are, or \\\\\\\""that's a bush\\\\\\\"" without telling you the shape and position of every leaf. This is a feature of brains, not a bug. In everyday life it would be distracting to notice every leaf on every bush. But when you have to paint something, you have to look more closely, and when you do there's a lot to see. You can still be noticing new things after days of trying to paint something people usually take for granted, just as you can after days of trying to write an essay about something people usually take for granted.\\\\n\\\\nThis is not the only way to paint. I'm not 100% sure it's even a good way to paint. But it seemed a good enough bet to be worth trying.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""While I was a student at the Accademia I started painting still lives in my bedroom at night. These paintings were tiny, because the room was, and because I painted them on leftover scraps of canvas, which was all I could afford at the time. Painting still lives is different from painting people, because the subject, as its name suggests, can't move. People can't sit for more than about 15 minutes at a time, and when they do they don't sit very still. So the traditional m.o. for painting people is to know how to paint a generic person, which you then modify to match the specific person you're painting. Whereas a still life you can, if you want, copy pixel by pixel from what you're seeing. You don't want to stop there, of course, or you get merely photographic accuracy, and what makes a still life interesting is that it's been through a head. You want to emphasize the visual cues that tell you, for example, that the reason the color changes suddenly at a certain point is that it's the\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I had always liked looking at paintings. Could I make them? I had no idea. I'd never imagined it was even possible. I knew intellectually that people made art — that it didn't just appear spontaneously — but it was as if the people who made it were a different species. They either lived long ago or were mysterious geniuses doing strange things in profiles in Life magazine. The idea of actually being able to make art, to put that verb before that noun, seemed almost miraculous.\\\\n\\\\nThat fall I started taking art classes at Harvard. Grad students could take classes in any department, and my advisor, Tom Cheatham, was very easy going. If he even knew about the strange classes I was taking, he never said anything.\\\\n\\\\nSo now I was in a PhD program in computer science, yet planning to be an artist, yet also genuinely in love with Lisp hacking and working away at On Lisp. In other words, like many a grad student, I was working energetically on multiple projects that were not my thesis.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""edge of an object. By subtly emphasizing such things you can make paintings that are more realistic than photographs not just in some metaphorical sense, but in the strict information-theoretic sense. [4]\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""[4] You can of course paint people like still lives if you want to, and they're willing. That sort of portrait is arguably the apex of still life painting, though the long sitting does tend to produce pained expressions in the sitters.\\\\n\\\\n[5] Interleaf was one of many companies that had smart people and built impressive technology, and yet got crushed by Moore's Law. In the 1990s the exponential growth in the power of commodity (i.e. Intel) processors rolled up high-end, special-purpose hardware and software companies like a bulldozer.\\\\n\\\\n[6] The signature style seekers at RISD weren't specifically mercenary. In the art world, money and coolness are tightly coupled. Anything expensive comes to be seen as cool, and anything seen as cool will soon become equally expensive.\\\\n\\\\n[7] Technically the apartment wasn't rent-controlled but rent-stabilized, but this is a refinement only New Yorkers would know or care about. The point is that it was really cheap, less than half market price.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""In this dissatisfied state I went in 1988 to visit Rich Draves at CMU, where he was in grad school. One day I went to visit the Carnegie Institute, where I'd spent a lot of time as a kid. While looking at a painting there I realized something that might seem obvious, but was a big surprise to me. There, right on the wall, was something you could make that would last. Paintings didn't become obsolete. Some of the best ones were hundreds of years old.\\\\n\\\\nAnd moreover this was something you could make a living doing. Not as easily as you could by writing software, of course, but I thought if you were really industrious and lived really cheaply, it had to be possible to make enough to survive. And as an artist you could be truly independent. You wouldn't have a boss, or even need to get research funding.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""When I got back to New York I resumed my old life, except now I was rich. It was as weird as it sounds. I resumed all my old patterns, except now there were doors where there hadn't been. Now when I was tired of walking, all I had to do was raise my hand, and (unless it was raining) a taxi would stop to pick me up. Now when I walked past charming little restaurants I could go in and order lunch. It was exciting for a while. Painting started to go better. I experimented with a new kind of still life where I'd paint one painting in the old way, then photograph it and print it, blown up, on canvas, and then use that as the underpainting for a second still life, painted from the same objects (which hopefully hadn't rotted yet).\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""In the fall of 1992 I moved back to Providence to continue at RISD. The foundation had merely been intro stuff, and the Accademia had been a (very civilized) joke. Now I was going to see what real art school was like. But alas it was more like the Accademia than not. Better organized, certainly, and a lot more expensive, but it was now becoming clear that art school did not bear the same relationship to art that medical school bore to medicine. At least not the painting department. The textile department, which my next door neighbor belonged to, seemed to be pretty rigorous. No doubt illustration and architecture were too. But painting was post-rigorous. Painting students were supposed to express themselves, which to the more worldly ones meant to try to cook up some sort of distinctive signature style.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I'm only up to age 25 and already there are such conspicuous patterns. Here I was, yet again about to attend some august institution in the hopes of learning about some prestigious subject, and yet again about to be disappointed. The students and faculty in the painting department at the Accademia were the nicest people you could imagine, but they had long since arrived at an arrangement whereby the students wouldn't require the faculty to teach anything, and in return the faculty wouldn't require the students to learn anything. And at the same time all involved would adhere outwardly to the conventions of a 19th century atelier. We actually had one of those little stoves, fed with kindling, that you see in 19th century studio paintings, and a nude model sitting as close to it as possible without getting burned. Except hardly anyone else painted her besides me. The rest of the students spent their time chatting or occasionally trying to imitate things they'd seen in American art\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""What should I do next? Rtm's advice hadn't included anything about that. I wanted to do something completely different, so I decided I'd paint. I wanted to see how good I could get if I really focused on it. So the day after I stopped working on YC, I started painting. I was rusty and it took a while to get back into shape, but it was at least completely engaging. [18]\\\\n\\\\nI spent most of the rest of 2014 painting. I'd never been able to work so uninterruptedly before, and I got to be better than I had been. Not good enough, but better. Then in November, right in the middle of a painting, I ran out of steam. Up till that point I'd always been curious to see how the painting I was working on would turn out, but suddenly finishing this one seemed like a chore. So I stopped working on it and cleaned my brushes and haven't painted since. So far anyway.\\\""}\""}]"", ""tool_call_id"": ""toolu_012KNw9MYeXeTpXorN67UjiK"", ""additional_kwargs"": {}, ""response_metadata"": {}}}]}}, ""event"": ""toolResult""}",2025-06-20 03:07:59.927 -0600
"5129eb6a-1dce-4e7b-9bcf-7f87c0daf1be","{""id"": [""langchain_core"", ""messages"", ""AIMessageChunk""], ""lc"": 1, ""type"": ""constructor"", ""event"": ""agentAction"", ""kwargs"": {""id"": ""msg_01DXAtt3KtfB423XugaVr5LC"", ""content"": [{""text"": ""Let me search for information about Paul Graham's experience at the Accademia di Belli Arti to answer your question about the learning environment there."", ""type"": ""text"", ""index"": 0}, {""id"": ""toolu_01WKqz1TGhWoGX5EwhoyEyoh"", ""name"": ""paul_graham_Knowledge_Base"", ""type"": ""tool_use"", ""index"": 1, ""input"": ""{\""input\"": \""Paul Graham Accademia di Belli Arti experience students faculty interaction teaching approach\""}""}], ""tool_calls"": [{""id"": ""toolu_01WKqz1TGhWoGX5EwhoyEyoh"", ""args"": {""input"": ""Paul Graham Accademia di Belli Arti experience students faculty interaction teaching approach""}, ""name"": ""paul_graham_Knowledge_Base"", ""type"": ""tool_call""}], ""usage_metadata"": {""input_tokens"": 4604, ""total_tokens"": 4714, ""output_tokens"": 110, ""input_token_details"": {""cache_read"": 0, ""cache_creation"": 0}}, ""tool_call_chunks"": [{""id"": ""toolu_01WKqz1TGhWoGX5EwhoyEyoh"", ""args"": ""{\""input\"": \""Paul Graham Accademia di Belli Arti experience students faculty interaction teaching approach\""}"", ""name"": ""paul_graham_Knowledge_Base"", ""index"": 1}], ""additional_kwargs"": {""id"": ""msg_01DXAtt3KtfB423XugaVr5LC"", ""role"": ""assistant"", ""type"": ""message"", ""model"": ""claude-3-7-sonnet-20250219"", ""stop_reason"": ""tool_use"", ""stop_sequence"": null}, ""response_metadata"": {""usage"": {""service_tier"": ""standard"", ""cache_read_input_tokens"": 0, ""cache_creation_input_tokens"": 0}}, ""invalid_tool_calls"": []}}",2025-06-20 03:07:30.939 -0600
"5129eb6a-1dce-4e7b-9bcf-7f87c0daf1be","{""agent"": ""ShyftOS Agent"", ""chunk"": {""tools"": {""messages"": [{""id"": [""langchain_core"", ""messages"", ""ToolMessage""], ""lc"": 1, ""type"": ""constructor"", ""kwargs"": {""id"": ""run-b6d55455-5af3-4b34-802b-29f3a38e1602-tool-toolu_01WKqz1TGhWoGX5EwhoyEyoh"", ""name"": ""paul_graham_Knowledge_Base"", ""content"": ""[{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""In the fall of 1992 I moved back to Providence to continue at RISD. The foundation had merely been intro stuff, and the Accademia had been a (very civilized) joke. Now I was going to see what real art school was like. But alas it was more like the Accademia than not. Better organized, certainly, and a lot more expensive, but it was now becoming clear that art school did not bear the same relationship to art that medical school bore to medicine. At least not the painting department. The textile department, which my next door neighbor belonged to, seemed to be pretty rigorous. No doubt illustration and architecture were too. But painting was post-rigorous. Painting students were supposed to express themselves, which to the more worldly ones meant to try to cook up some sort of distinctive signature style.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I'm only up to age 25 and already there are such conspicuous patterns. Here I was, yet again about to attend some august institution in the hopes of learning about some prestigious subject, and yet again about to be disappointed. The students and faculty in the painting department at the Accademia were the nicest people you could imagine, but they had long since arrived at an arrangement whereby the students wouldn't require the faculty to teach anything, and in return the faculty wouldn't require the students to learn anything. And at the same time all involved would adhere outwardly to the conventions of a 19th century atelier. We actually had one of those little stoves, fed with kindling, that you see in 19th century studio paintings, and a nude model sitting as close to it as possible without getting burned. Except hardly anyone else painted her besides me. The rest of the students spent their time chatting or occasionally trying to imitate things they'd seen in American art\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I picked applications of continuations as the topic. In retrospect I should have written about macros and embedded languages. There's a whole world there that's barely been explored. But all I wanted was to get out of grad school, and my rapidly written dissertation sufficed, just barely.\\\\n\\\\nMeanwhile I was applying to art schools. I applied to two: RISD in the US, and the Accademia di Belli Arti in Florence, which, because it was the oldest art school, I imagined would be good. RISD accepted me, and I never heard back from the Accademia, so off to Providence I went.\\\\n\\\\nI'd applied for the BFA program at RISD, which meant in effect that I had to go to college again. This was not as strange as it sounds, because I was only 25, and art schools are full of people of different ages. RISD counted me as a transfer sophomore and said I had to do the foundation that summer. The foundation means the classes that everyone has to take in fundamental subjects like drawing, color, and design.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I had always liked looking at paintings. Could I make them? I had no idea. I'd never imagined it was even possible. I knew intellectually that people made art — that it didn't just appear spontaneously — but it was as if the people who made it were a different species. They either lived long ago or were mysterious geniuses doing strange things in profiles in Life magazine. The idea of actually being able to make art, to put that verb before that noun, seemed almost miraculous.\\\\n\\\\nThat fall I started taking art classes at Harvard. Grad students could take classes in any department, and my advisor, Tom Cheatham, was very easy going. If he even knew about the strange classes I was taking, he never said anything.\\\\n\\\\nSo now I was in a PhD program in computer science, yet planning to be an artist, yet also genuinely in love with Lisp hacking and working away at On Lisp. In other words, like many a grad student, I was working energetically on multiple projects that were not my thesis.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""Toward the end of the summer I got a big surprise: a letter from the Accademia, which had been delayed because they'd sent it to Cambridge England instead of Cambridge Massachusetts, inviting me to take the entrance exam in Florence that fall. This was now only weeks away. My nice landlady let me leave my stuff in her attic. I had some money saved from consulting work I'd done in grad school; there was probably enough to last a year if I lived cheaply. Now all I had to do was learn Italian.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""There were plenty of earnest students too: kids who \\\\\\\""could draw\\\\\\\"" in high school, and now had come to what was supposed to be the best art school in the country, to learn to draw even better. They tended to be confused and demoralized by what they found at RISD, but they kept going, because painting was what they did. I was not one of the kids who could draw in high school, but at RISD I was definitely closer to their tribe than the tribe of signature style seekers.\\\\n\\\\nI learned a lot in the color class I took at RISD, but otherwise I was basically teaching myself to paint, and I could do that for free. So in 1993 I dropped out. I hung around Providence for a bit, and then my college friend Nancy Parmet did me a big favor. A rent-controlled apartment in a building her mother owned in New York was becoming vacant. Did I want it? It wasn't much more than my current place, and New York was supposed to be where the artists were. So yes, I wanted it! [7]\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""Only stranieri (foreigners) had to take this entrance exam. In retrospect it may well have been a way of excluding them, because there were so many stranieri attracted by the idea of studying art in Florence that the Italian students would otherwise have been outnumbered. I was in decent shape at painting and drawing from the RISD foundation that summer, but I still don't know how I managed to pass the written exam. I remember that I answered the essay question by writing about Cezanne, and that I cranked up the intellectual level as high as I could to make the most of my limited vocabulary. [2]\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""[1] My experience skipped a step in the evolution of computers: time-sharing machines with interactive OSes. I went straight from batch processing to microcomputers, which made microcomputers seem all the more exciting.\\\\n\\\\n[2] Italian words for abstract concepts can nearly always be predicted from their English cognates (except for occasional traps like polluzione). It's the everyday words that differ. So if you string together a lot of abstract concepts with a few simple verbs, you can make a little Italian go a long way.\\\\n\\\\n[3] I lived at Piazza San Felice 4, so my walk to the Accademia went straight down the spine of old Florence: past the Pitti, across the bridge, past Orsanmichele, between the Duomo and the Baptistery, and then up Via Ricasoli to Piazza San Marco. I saw Florence at street level in every possible condition, from empty dark winter evenings to sweltering summer days when the streets were packed with tourists.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""Our teacher, professor Ulivi, was a nice guy. He could see I worked hard, and gave me a good grade, which he wrote down in a sort of passport each student had. But the Accademia wasn't teaching me anything except Italian, and my money was running out, so at the end of the first year I went back to the US.\\\\n\\\\nI wanted to go back to RISD, but I was now broke and RISD was very expensive, so I decided to get a job for a year and then return to RISD the next fall. I got one at a company called Interleaf, which made software for creating documents. You mean like Microsoft Word? Exactly. That was how I learned that low end software tends to eat high end software. But Interleaf still had a few years to live yet. [5]\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""The good part was that I got paid huge amounts of money, especially by art student standards. In Florence, after paying my part of the rent, my budget for everything else had been $7 a day. Now I was getting paid more than 4 times that every hour, even when I was just sitting in a meeting. By living cheaply I not only managed to save enough to go back to RISD, but also paid off my college loans.\\\""}\""}]"", ""tool_call_id"": ""toolu_01WKqz1TGhWoGX5EwhoyEyoh"", ""additional_kwargs"": {}, ""response_metadata"": {}}}]}}, ""event"": ""toolResult""}",2025-06-20 03:07:31.787 -0600
b432f3de-69c9-4440-923e-9f054478de6e,"{""id"": [""langchain_core"", ""messages"", ""AIMessageChunk""], ""lc"": 1, ""type"": ""constructor"", ""event"": ""agentAction"", ""kwargs"": {""id"": ""msg_01J6ErbANhByghpc4RLkUh37"", ""content"": [{""text"": ""I'll look into Paul Graham's essay to find information about his quick decision regarding graduation. Let me search for this specific detail."", ""type"": ""text"", ""index"": 0}, {""id"": ""toolu_01F5Wd3cZEgqmZASSFyPoUT9"", ""name"": ""paul_graham_Knowledge_Base"", ""type"": ""tool_use"", ""index"": 1, ""input"": ""{\""input\"": \""quick decision graduation\""}""}], ""tool_calls"": [{""id"": ""toolu_01F5Wd3cZEgqmZASSFyPoUT9"", ""args"": {""input"": ""quick decision graduation""}, ""name"": ""paul_graham_Knowledge_Base"", ""type"": ""tool_call""}], ""usage_metadata"": {""input_tokens"": 4586, ""total_tokens"": 4674, ""output_tokens"": 88, ""input_token_details"": {""cache_read"": 0, ""cache_creation"": 0}}, ""tool_call_chunks"": [{""id"": ""toolu_01F5Wd3cZEgqmZASSFyPoUT9"", ""args"": ""{\""input\"": \""quick decision graduation\""}"", ""name"": ""paul_graham_Knowledge_Base"", ""index"": 1}], ""additional_kwargs"": {""id"": ""msg_01J6ErbANhByghpc4RLkUh37"", ""role"": ""assistant"", ""type"": ""message"", ""model"": ""claude-3-7-sonnet-20250219"", ""stop_reason"": ""tool_use"", ""stop_sequence"": null}, ""response_metadata"": {""usage"": {""service_tier"": ""standard"", ""cache_read_input_tokens"": 0, ""cache_creation_input_tokens"": 0}}, ""invalid_tool_calls"": []}}",2025-06-20 03:07:00.731 -0600
b432f3de-69c9-4440-923e-9f054478de6e,"{""agent"": ""ShyftOS Agent"", ""chunk"": {""tools"": {""messages"": [{""id"": [""langchain_core"", ""messages"", ""ToolMessage""], ""lc"": 1, ""type"": ""constructor"", ""kwargs"": {""id"": ""run-6058a57a-3acc-4961-ad35-dea877ff40fb-tool-toolu_01F5Wd3cZEgqmZASSFyPoUT9"", ""name"": ""paul_graham_Knowledge_Base"", ""content"": ""[{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I didn't see a way out of this situation. I didn't want to drop out of grad school, but how else was I going to get out? I remember when my friend Robert Morris got kicked out of Cornell for writing the internet worm of 1988, I was envious that he'd found such a spectacular way to get out of grad school.\\\\n\\\\nThen one day in April 1990 a crack appeared in the wall. I ran into professor Cheatham and he asked if I was far enough along to graduate that June. I didn't have a word of my dissertation written, but in what must have been the quickest bit of thinking in my life, I decided to take a shot at writing one in the 5 weeks or so that remained before the deadline, reusing parts of On Lisp where I could, and I was able to respond, with no perceptible delay \\\\\\\""Yes, I think so. I'll give you something to read in a few days.\\\\\\\""\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""We'd use the building I owned in Cambridge as our headquarters. We'd all have dinner there once a week — on tuesdays, since I was already cooking for the thursday diners on thursdays — and after dinner we'd bring in experts on startups to give talks.\\\\n\\\\nWe knew undergrads were deciding then about summer jobs, so in a matter of days we cooked up something we called the Summer Founders Program, and I posted an announcement on my site, inviting undergrads to apply. I had never imagined that writing essays would be a way to get \\\\\\\""deal flow,\\\\\\\"" as investors call it, but it turned out to be the perfect source. [15] We got 225 applications for the Summer Founders Program, and we were surprised to find that a lot of them were from people who'd already graduated, or were about to that spring. Already this SFP thing was starting to feel more serious than we'd intended.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""For my undergraduate thesis, I reverse-engineered SHRDLU. My God did I love working on that program. It was a pleasing bit of code, but what made it even more exciting was my belief — hard to imagine now, but not unique in 1985 — that it was already climbing the lower slopes of intelligence.\\\\n\\\\nI had gotten into a program at Cornell that didn't make you choose a major. You could take whatever classes you liked, and choose whatever you liked to put on your degree. I of course chose \\\\\\\""Artificial Intelligence.\\\\\\\"" When I got the actual physical diploma, I was dismayed to find that the quotes had been included, which made them read as scare-quotes. At the time this bothered me, but now it seems amusingly accurate, for reasons I was about to discover.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""When we asked Sam if he wanted to be president of YC, initially he said no. He wanted to start a startup to make nuclear reactors. But I kept at it, and in October 2013 he finally agreed. We decided he'd take over starting with the winter 2014 batch. For the rest of 2013 I left running YC more and more to Sam, partly so he could learn the job, and partly because I was focused on my mother, whose cancer had returned.\\\\n\\\\nShe died on January 15, 2014. We knew this was coming, but it was still hard when it did.\\\\n\\\\nI kept working on YC till March, to help get that batch of startups through Demo Day, then I checked out pretty completely. (I still talk to alumni and to new startups working on things I'm interested in, but that only takes a few hours a week.)\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""[8] Most software you can launch as soon as it's done. But when the software is an online store builder and you're hosting the stores, if you don't have any users yet, that fact will be painfully obvious. So before we could launch publicly we had to launch privately, in the sense of recruiting an initial set of users and making sure they had decent-looking stores.\\\\n\\\\n[9] We'd had a code editor in Viaweb for users to define their own page styles. They didn't know it, but they were editing Lisp expressions underneath. But this wasn't an app editor, because the code ran when the merchants' sites were generated, not when shoppers visited them.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I picked applications of continuations as the topic. In retrospect I should have written about macros and embedded languages. There's a whole world there that's barely been explored. But all I wanted was to get out of grad school, and my rapidly written dissertation sufficed, just barely.\\\\n\\\\nMeanwhile I was applying to art schools. I applied to two: RISD in the US, and the Accademia di Belli Arti in Florence, which, because it was the oldest art school, I imagined would be good. RISD accepted me, and I never heard back from the Accademia, so off to Providence I went.\\\\n\\\\nI'd applied for the BFA program at RISD, which meant in effect that I had to go to college again. This was not as strange as it sounds, because I was only 25, and art schools are full of people of different ages. RISD counted me as a transfer sophomore and said I had to do the foundation that summer. The foundation means the classes that everyone has to take in fundamental subjects like drawing, color, and design.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""The most distinctive thing about YC is the batch model: to fund a bunch of startups all at once, twice a year, and then to spend three months focusing intensively on trying to help them. That part we discovered by accident, not merely implicitly but explicitly due to our ignorance about investing. We needed to get experience as investors. What better way, we thought, than to fund a whole bunch of startups at once? We knew undergrads got temporary jobs at tech companies during the summer. Why not organize a summer program where they'd start startups instead? We wouldn't feel guilty for being in a sense fake investors, because they would in a similar sense be fake founders. So while we probably wouldn't make much money out of it, we'd at least get to practice being investors on them, and they for their part would probably have a more interesting summer than they would working at Microsoft.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""In the summer of 2012 my mother had a stroke, and the cause turned out to be a blood clot caused by colon cancer. The stroke destroyed her balance, and she was put in a nursing home, but she really wanted to get out of it and back to her house, and my sister and I were determined to help her do it. I used to fly up to Oregon to visit her regularly, and I had a lot of time to think on those flights. On one of them I realized I was ready to hand YC over to someone else.\\\\n\\\\nI asked Jessica if she wanted to be president, but she didn't, so we decided we'd try to recruit Sam Altman. We talked to Robert and Trevor and we agreed to make it a complete changing of the guard. Up till that point YC had been controlled by the original LLC we four had started. But we wanted YC to last for a long time, and to do that it couldn't be controlled by the founders. So if Sam said yes, we'd let him reorganize YC. Robert and I would retire, and Jessica and Trevor would become ordinary partners.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""Our teacher, professor Ulivi, was a nice guy. He could see I worked hard, and gave me a good grade, which he wrote down in a sort of passport each student had. But the Accademia wasn't teaching me anything except Italian, and my money was running out, so at the end of the first year I went back to the US.\\\\n\\\\nI wanted to go back to RISD, but I was now broke and RISD was very expensive, so I decided to get a job for a year and then return to RISD the next fall. I got one at a company called Interleaf, which made software for creating documents. You mean like Microsoft Word? Exactly. That was how I learned that low end software tends to eat high end software. But Interleaf still had a few years to live yet. [5]\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""As YC grew, we started to notice other advantages of scale. The alumni became a tight community, dedicated to helping one another, and especially the current batch, whose shoes they remembered being in. We also noticed that the startups were becoming one another's customers. We used to refer jokingly to the \\\\\\\""YC GDP,\\\\\\\"" but as YC grows this becomes less and less of a joke. Now lots of startups get their initial set of customers almost entirely from among their batchmates.\\\\n\\\\nI had not originally intended YC to be a full-time job. I was going to do three things: hack, write essays, and work on YC. As YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.\\\""}\""}]"", ""tool_call_id"": ""toolu_01F5Wd3cZEgqmZASSFyPoUT9"", ""additional_kwargs"": {}, ""response_metadata"": {}}}]}}, ""event"": ""toolResult""}",2025-06-20 03:07:01.517 -0600
db9c6f91-5ce3-4f23-9c29-2c9320cbf551,"{""id"": [""langchain_core"", ""messages"", ""AIMessageChunk""], ""lc"": 1, ""type"": ""constructor"", ""event"": ""agentAction"", ""kwargs"": {""id"": ""msg_019XHWhavUS231sUTwmk2Lmz"", ""content"": [{""text"": ""Let me search for information about Paul Graham's decision to write a book on Lisp hacking and his reasoning behind it."", ""type"": ""text"", ""index"": 0}, {""id"": ""toolu_01SXrm3zrUiTCHZTCJo6YpR5"", ""name"": ""paul_graham_Knowledge_Base"", ""type"": ""tool_use"", ""index"": 1, ""input"": ""{\""input\"": \""Paul Graham writing book Lisp hacking limited knowledge reasons\""}""}], ""tool_calls"": [{""id"": ""toolu_01SXrm3zrUiTCHZTCJo6YpR5"", ""args"": {""input"": ""Paul Graham writing book Lisp hacking limited knowledge reasons""}, ""name"": ""paul_graham_Knowledge_Base"", ""type"": ""tool_call""}], ""usage_metadata"": {""input_tokens"": 4601, ""total_tokens"": 4697, ""output_tokens"": 96, ""input_token_details"": {""cache_read"": 0, ""cache_creation"": 0}}, ""tool_call_chunks"": [{""id"": ""toolu_01SXrm3zrUiTCHZTCJo6YpR5"", ""args"": ""{\""input\"": \""Paul Graham writing book Lisp hacking limited knowledge reasons\""}"", ""name"": ""paul_graham_Knowledge_Base"", ""index"": 1}], ""additional_kwargs"": {""id"": ""msg_019XHWhavUS231sUTwmk2Lmz"", ""role"": ""assistant"", ""type"": ""message"", ""model"": ""claude-3-7-sonnet-20250219"", ""stop_reason"": ""tool_use"", ""stop_sequence"": null}, ""response_metadata"": {""usage"": {""service_tier"": ""standard"", ""cache_read_input_tokens"": 0, ""cache_creation_input_tokens"": 0}}, ""invalid_tool_calls"": []}}",2025-06-20 03:06:24.178 -0600
db9c6f91-5ce3-4f23-9c29-2c9320cbf551,"{""agent"": ""ShyftOS Agent"", ""chunk"": {""tools"": {""messages"": [{""id"": [""langchain_core"", ""messages"", ""ToolMessage""], ""lc"": 1, ""type"": ""constructor"", ""kwargs"": {""id"": ""run-3a71aad3-8c36-4547-8764-b4ed41a780ff-tool-toolu_01SXrm3zrUiTCHZTCJo6YpR5"", ""name"": ""paul_graham_Knowledge_Base"", ""content"": ""[{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""So I looked around to see what I could salvage from the wreckage of my plans, and there was Lisp. I knew from experience that Lisp was interesting for its own sake and not just for its association with AI, even though that was the main reason people cared about it at the time. So I decided to focus on Lisp. In fact, I decided to write a book about Lisp hacking. It's scary to think how little I knew about Lisp hacking when I started writing that book. But there's nothing like writing a book about something to help you learn it. The book, On Lisp, wasn't published till 1993, but I wrote much of it in grad school.\\\\n\\\\nComputer Science is an uneasy alliance between two halves, theory and systems. The theory people prove things, and the systems people build things. I wanted to build things. I had plenty of respect for theory — indeed, a sneaking suspicion that it was the more admirable of the two halves — but building things seemed so much more exciting.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""The subset I would build as an open source project was the new Lisp, whose parentheses I now wouldn't even have to hide. A lot of Lisp hackers dream of building a new Lisp, partly because one of the distinctive features of the language is that it has dialects, and partly, I think, because we have in our minds a Platonic form of Lisp that all existing dialects fall short of. I certainly did. So at the end of the summer Dan and I switched to working on this new dialect of Lisp, which I called Arc, in a house I bought in Cambridge.\\\\n\\\\nThe following spring, lightning struck. I was invited to give a talk at a Lisp conference, so I gave one about how we'd used Lisp at Viaweb. Afterward I put a postscript file of this talk online, on paulgraham.com, which I'd created years before using Viaweb but had never used for anything. In one day it got 30,000 page views. What on earth had happened? The referring urls showed that someone had posted it on Slashdot. [10]\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I realize that sounds rather wimpy. But attention is a zero sum game. If you can choose what to work on, and you choose a project that's not the best one (or at least a good one) for you, then it's getting in the way of another project that is. And at 50 there was some opportunity cost to screwing around.\\\\n\\\\nI started writing essays again, and wrote a bunch of new ones over the next few months. I even wrote a couple that weren't about startups. Then in March 2015 I started working on Lisp again.\\\\n\\\\nThe distinctive thing about Lisp is that its core is a language defined by writing an interpreter in itself. It wasn't originally intended as a programming language in the ordinary sense. It was meant to be a formal model of computation, an alternative to the Turing machine. If you want to write an interpreter for a language in itself, what's the minimum set of predefined operators you need? The Lisp that John McCarthy invented, or more accurately discovered, is an answer to that question. [19]\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I was nervous about money, because I could sense that Interleaf was on the way down. Freelance Lisp hacking work was very rare, and I didn't want to have to program in another language, which in those days would have meant C++ if I was lucky. So with my unerring nose for financial opportunity, I decided to write another book on Lisp. This would be a popular book, the sort of book that could be used as a textbook. I imagined myself living frugally off the royalties and spending all my time painting. (The painting on the cover of this book, ANSI Common Lisp, is one that I painted around this time.)\\\\n\\\\nThe best thing about New York for me was the presence of Idelle and Julian Weber. Idelle Weber was a painter, one of the early photorealists, and I'd taken her painting class at Harvard. I've never known a teacher more beloved by her students. Large numbers of former students kept in touch with her, including me. After I moved to New York I became her de facto studio assistant.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""Interleaf had done something pretty bold. Inspired by Emacs, they'd added a scripting language, and even made the scripting language a dialect of Lisp. Now they wanted a Lisp hacker to write things in it. This was the closest thing I've had to a normal job, and I hereby apologize to my boss and coworkers, because I was a bad employee. Their Lisp was the thinnest icing on a giant C cake, and since I didn't know C and didn't want to learn it, I never understood most of the software. Plus I was terribly irresponsible. This was back when a programming job meant showing up every day during certain working hours. That seemed unnatural to me, and on this point the rest of the world is coming around to my way of thinking, but at the time it caused a lot of friction. Toward the end of the year I spent much of my time surreptitiously working on On Lisp, which I had by this time gotten a contract to publish.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""Now they are, though. Now you could continue using McCarthy's axiomatic approach till you'd defined a complete programming language. And as long as every change you made to McCarthy's Lisp was a discoveredness-preserving transformation, you could, in principle, end up with a complete language that had this quality. Harder to do than to talk about, of course, but if it was possible in principle, why not try? So I decided to take a shot at it. It took 4 years, from March 26, 2015 to October 12, 2019. It was fortunate that I had a precisely defined goal, or it would have been hard to keep at it for so long.\\\\n\\\\nI wrote this new Lisp, called Bel, in itself in Arc. That may sound like a contradiction, but it's an indication of the sort of trickery I had to engage in to make this work. By means of an egregious collection of hacks I managed to make something close enough to an interpreter written in itself that could actually run. Not fast, but fast enough to test.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""There weren't any classes in AI at Cornell then, not even graduate classes, so I started trying to teach myself. Which meant learning Lisp, since in those days Lisp was regarded as the language of AI. The commonly used programming languages then were pretty primitive, and programmers' ideas correspondingly so. The default language at Cornell was a Pascal-like language called PL/I, and the situation was similar elsewhere. Learning Lisp expanded my concept of a program so fast that it was years before I started to have a sense of where the new limits were. This was more like it; this was what I had expected college to do. It wasn't happening in a class, like it was supposed to, but that was ok. For the next couple years I was on a roll. I knew what I was going to do.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""McCarthy didn't realize this Lisp could even be used to program computers till his grad student Steve Russell suggested it. Russell translated McCarthy's interpreter into IBM 704 machine language, and from that point Lisp started also to be a programming language in the ordinary sense. But its origins as a model of computation gave it a power and elegance that other languages couldn't match. It was this that attracted me in college, though I didn't understand why at the time.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I had always liked looking at paintings. Could I make them? I had no idea. I'd never imagined it was even possible. I knew intellectually that people made art — that it didn't just appear spontaneously — but it was as if the people who made it were a different species. They either lived long ago or were mysterious geniuses doing strange things in profiles in Life magazine. The idea of actually being able to make art, to put that verb before that noun, seemed almost miraculous.\\\\n\\\\nThat fall I started taking art classes at Harvard. Grad students could take classes in any department, and my advisor, Tom Cheatham, was very easy going. If he even knew about the strange classes I was taking, he never said anything.\\\\n\\\\nSo now I was in a PhD program in computer science, yet planning to be an artist, yet also genuinely in love with Lisp hacking and working away at On Lisp. In other words, like many a grad student, I was working energetically on multiple projects that were not my thesis.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""In the fall of 2019, Bel was finally finished. Like McCarthy's original Lisp, it's a spec rather than an implementation, although like McCarthy's Lisp it's a spec expressed as code.\\\\n\\\\nNow that I could write essays again, I wrote a bunch about topics I'd had stacked up. I kept writing essays through 2020, but I also started to think about other things I could work on. How should I choose what to do? Well, how had I chosen what to work on in the past? I wrote an essay for myself to answer that question, and I was surprised how long and messy the answer turned out to be. If this surprised me, who'd lived it, then I thought perhaps it would be interesting to other people, and encouraging to those with similarly messy lives. So I wrote a more detailed version for others to read, and this is the last sentence of it.\\\\n\\\\nNotes\\\""}\""}]"", ""tool_call_id"": ""toolu_01SXrm3zrUiTCHZTCJo6YpR5"", ""additional_kwargs"": {}, ""response_metadata"": {}}}]}}, ""event"": ""toolResult""}",2025-06-20 03:06:25.066 -0600
"671a21bd-e0af-48a5-8dbf-ba4d92bd6493","{""id"": [""langchain_core"", ""messages"", ""AIMessageChunk""], ""lc"": 1, ""type"": ""constructor"", ""event"": ""agentAction"", ""kwargs"": {""id"": ""msg_016NH2Hjth8Xs7oWdk8gYqvi"", ""content"": [{""text"": ""I'll explore how Paul Graham attempted to reconcile his interests in computer science and art during his graduate school years. Let me search for the relevant information in his essay."", ""type"": ""text"", ""index"": 0}, {""id"": ""toolu_01D1cfP5UsjoARRVqsbKkveM"", ""name"": ""paul_graham_Knowledge_Base"", ""type"": ""tool_use"", ""index"": 1, ""input"": ""{\""input\"": \""Paul Graham computer science art grad school reconcile interests\""}""}], ""tool_calls"": [{""id"": ""toolu_01D1cfP5UsjoARRVqsbKkveM"", ""args"": {""input"": ""Paul Graham computer science art grad school reconcile interests""}, ""name"": ""paul_graham_Knowledge_Base"", ""type"": ""tool_call""}], ""usage_metadata"": {""input_tokens"": 4599, ""total_tokens"": 4701, ""output_tokens"": 102, ""input_token_details"": {""cache_read"": 0, ""cache_creation"": 0}}, ""tool_call_chunks"": [{""id"": ""toolu_01D1cfP5UsjoARRVqsbKkveM"", ""args"": ""{\""input\"": \""Paul Graham computer science art grad school reconcile interests\""}"", ""name"": ""paul_graham_Knowledge_Base"", ""index"": 1}], ""additional_kwargs"": {""id"": ""msg_016NH2Hjth8Xs7oWdk8gYqvi"", ""role"": ""assistant"", ""type"": ""message"", ""model"": ""claude-3-7-sonnet-20250219"", ""stop_reason"": ""tool_use"", ""stop_sequence"": null}, ""response_metadata"": {""usage"": {""service_tier"": ""standard"", ""cache_read_input_tokens"": 0, ""cache_creation_input_tokens"": 0}}, ""invalid_tool_calls"": []}}",2025-06-20 03:05:38.590 -0600
"671a21bd-e0af-48a5-8dbf-ba4d92bd6493","{""agent"": ""ShyftOS Agent"", ""chunk"": {""tools"": {""messages"": [{""id"": [""langchain_core"", ""messages"", ""ToolMessage""], ""lc"": 1, ""type"": ""constructor"", ""kwargs"": {""id"": ""run-33ad2b72-c840-4ebe-893e-b68ebb85e0e4-tool-toolu_01D1cfP5UsjoARRVqsbKkveM"", ""name"": ""paul_graham_Knowledge_Base"", ""content"": ""[{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I had always liked looking at paintings. Could I make them? I had no idea. I'd never imagined it was even possible. I knew intellectually that people made art — that it didn't just appear spontaneously — but it was as if the people who made it were a different species. They either lived long ago or were mysterious geniuses doing strange things in profiles in Life magazine. The idea of actually being able to make art, to put that verb before that noun, seemed almost miraculous.\\\\n\\\\nThat fall I started taking art classes at Harvard. Grad students could take classes in any department, and my advisor, Tom Cheatham, was very easy going. If he even knew about the strange classes I was taking, he never said anything.\\\\n\\\\nSo now I was in a PhD program in computer science, yet planning to be an artist, yet also genuinely in love with Lisp hacking and working away at On Lisp. In other words, like many a grad student, I was working energetically on multiple projects that were not my thesis.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I picked applications of continuations as the topic. In retrospect I should have written about macros and embedded languages. There's a whole world there that's barely been explored. But all I wanted was to get out of grad school, and my rapidly written dissertation sufficed, just barely.\\\\n\\\\nMeanwhile I was applying to art schools. I applied to two: RISD in the US, and the Accademia di Belli Arti in Florence, which, because it was the oldest art school, I imagined would be good. RISD accepted me, and I never heard back from the Accademia, so off to Providence I went.\\\\n\\\\nI'd applied for the BFA program at RISD, which meant in effect that I had to go to college again. This was not as strange as it sounds, because I was only 25, and art schools are full of people of different ages. RISD counted me as a transfer sophomore and said I had to do the foundation that summer. The foundation means the classes that everyone has to take in fundamental subjects like drawing, color, and design.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""For my undergraduate thesis, I reverse-engineered SHRDLU. My God did I love working on that program. It was a pleasing bit of code, but what made it even more exciting was my belief — hard to imagine now, but not unique in 1985 — that it was already climbing the lower slopes of intelligence.\\\\n\\\\nI had gotten into a program at Cornell that didn't make you choose a major. You could take whatever classes you liked, and choose whatever you liked to put on your degree. I of course chose \\\\\\\""Artificial Intelligence.\\\\\\\"" When I got the actual physical diploma, I was dismayed to find that the quotes had been included, which made them read as scare-quotes. At the time this bothered me, but now it seems amusingly accurate, for reasons I was about to discover.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""So I looked around to see what I could salvage from the wreckage of my plans, and there was Lisp. I knew from experience that Lisp was interesting for its own sake and not just for its association with AI, even though that was the main reason people cared about it at the time. So I decided to focus on Lisp. In fact, I decided to write a book about Lisp hacking. It's scary to think how little I knew about Lisp hacking when I started writing that book. But there's nothing like writing a book about something to help you learn it. The book, On Lisp, wasn't published till 1993, but I wrote much of it in grad school.\\\\n\\\\nComputer Science is an uneasy alliance between two halves, theory and systems. The theory people prove things, and the systems people build things. I wanted to build things. I had plenty of respect for theory — indeed, a sneaking suspicion that it was the more admirable of the two halves — but building things seemed so much more exciting.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""In this dissatisfied state I went in 1988 to visit Rich Draves at CMU, where he was in grad school. One day I went to visit the Carnegie Institute, where I'd spent a lot of time as a kid. While looking at a painting there I realized something that might seem obvious, but was a big surprise to me. There, right on the wall, was something you could make that would last. Paintings didn't become obsolete. Some of the best ones were hundreds of years old.\\\\n\\\\nAnd moreover this was something you could make a living doing. Not as easily as you could by writing software, of course, but I thought if you were really industrious and lived really cheaply, it had to be possible to make enough to survive. And as an artist you could be truly independent. You wouldn't have a boss, or even need to get research funding.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""In the fall of 1992 I moved back to Providence to continue at RISD. The foundation had merely been intro stuff, and the Accademia had been a (very civilized) joke. Now I was going to see what real art school was like. But alas it was more like the Accademia than not. Better organized, certainly, and a lot more expensive, but it was now becoming clear that art school did not bear the same relationship to art that medical school bore to medicine. At least not the painting department. The textile department, which my next door neighbor belonged to, seemed to be pretty rigorous. No doubt illustration and architecture were too. But painting was post-rigorous. Painting students were supposed to express themselves, which to the more worldly ones meant to try to cook up some sort of distinctive signature style.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""There were plenty of earnest students too: kids who \\\\\\\""could draw\\\\\\\"" in high school, and now had come to what was supposed to be the best art school in the country, to learn to draw even better. They tended to be confused and demoralized by what they found at RISD, but they kept going, because painting was what they did. I was not one of the kids who could draw in high school, but at RISD I was definitely closer to their tribe than the tribe of signature style seekers.\\\\n\\\\nI learned a lot in the color class I took at RISD, but otherwise I was basically teaching myself to paint, and I could do that for free. So in 1993 I dropped out. I hung around Providence for a bit, and then my college friend Nancy Parmet did me a big favor. A rent-controlled apartment in a building her mother owned in New York was becoming vacant. Did I want it? It wasn't much more than my current place, and New York was supposed to be where the artists were. So yes, I wanted it! [7]\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""Though I liked programming, I didn't plan to study it in college. In college I was going to study philosophy, which sounded much more powerful. It seemed, to my naive high school self, to be the study of the ultimate truths, compared to which the things studied in other fields would be mere domain knowledge. What I discovered when I got to college was that the other fields took up so much of the space of ideas that there wasn't much left for these supposed ultimate truths. All that seemed left for philosophy were edge cases that people in other fields felt could safely be ignored.\\\\n\\\\nI couldn't have put this into words when I was 18. All I knew at the time was that I kept taking philosophy courses and they kept being boring. So I decided to switch to AI.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""She liked to paint on big, square canvases, 4 to 5 feet on a side. One day in late 1994 as I was stretching one of these monsters there was something on the radio about a famous fund manager. He wasn't that much older than me, and was super rich. The thought suddenly occurred to me: why don't I become rich? Then I'll be able to work on whatever I want.\\\\n\\\\nMeanwhile I'd been hearing more and more about this new thing called the World Wide Web. Robert Morris showed it to me when I visited him in Cambridge, where he was now in grad school at Harvard. It seemed to me that the web would be a big deal. I'd seen what graphical user interfaces had done for the popularity of microcomputers. It seemed like the web would do the same for the internet.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I applied to 3 grad schools: MIT and Yale, which were renowned for AI at the time, and Harvard, which I'd visited because Rich Draves went there, and was also home to Bill Woods, who'd invented the type of parser I used in my SHRDLU clone. Only Harvard accepted me, so that was where I went.\\\\n\\\\nI don't remember the moment it happened, or if there even was a specific moment, but during the first year of grad school I realized that AI, as practiced at the time, was a hoax. By which I mean the sort of AI in which a program that's told \\\\\\\""the dog is sitting on the chair\\\\\\\"" translates this into some formal representation and adds it to the list of things it knows.\\\""}\""}]"", ""tool_call_id"": ""toolu_01D1cfP5UsjoARRVqsbKkveM"", ""additional_kwargs"": {}, ""response_metadata"": {}}}]}}, ""event"": ""toolResult""}",2025-06-20 03:05:39.098 -0600
"0f185619-b2fb-46f3-a0e3-951cd82aec4f","{""id"": [""langchain_core"", ""messages"", ""AIMessageChunk""], ""lc"": 1, ""type"": ""constructor"", ""event"": ""agentAction"", ""kwargs"": {""id"": ""msg_01T1YrWsP2YDR3JLJkSSEXtS"", ""content"": [{""text"": ""Let me search for information about Paul Graham's shift towards Lisp and his journey with this programming language."", ""type"": ""text"", ""index"": 0}, {""id"": ""toolu_01UWd3BW6ScnLLQF52JNZLFN"", ""name"": ""paul_graham_Knowledge_Base"", ""type"": ""tool_use"", ""index"": 1, ""input"": ""{\""input\"": \""Paul Graham Lisp programming language interest reasons understanding\""}""}], ""tool_calls"": [{""id"": ""toolu_01UWd3BW6ScnLLQF52JNZLFN"", ""args"": {""input"": ""Paul Graham Lisp programming language interest reasons understanding""}, ""name"": ""paul_graham_Knowledge_Base"", ""type"": ""tool_call""}], ""usage_metadata"": {""input_tokens"": 4593, ""total_tokens"": 4683, ""output_tokens"": 90, ""input_token_details"": {""cache_read"": 0, ""cache_creation"": 0}}, ""tool_call_chunks"": [{""id"": ""toolu_01UWd3BW6ScnLLQF52JNZLFN"", ""args"": ""{\""input\"": \""Paul Graham Lisp programming language interest reasons understanding\""}"", ""name"": ""paul_graham_Knowledge_Base"", ""index"": 1}], ""additional_kwargs"": {""id"": ""msg_01T1YrWsP2YDR3JLJkSSEXtS"", ""role"": ""assistant"", ""type"": ""message"", ""model"": ""claude-3-7-sonnet-20250219"", ""stop_reason"": ""tool_use"", ""stop_sequence"": null}, ""response_metadata"": {""usage"": {""service_tier"": ""standard"", ""cache_read_input_tokens"": 0, ""cache_creation_input_tokens"": 0}}, ""invalid_tool_calls"": []}}",2025-06-20 03:05:09.108 -0600
"0f185619-b2fb-46f3-a0e3-951cd82aec4f","{""agent"": ""ShyftOS Agent"", ""chunk"": {""tools"": {""messages"": [{""id"": [""langchain_core"", ""messages"", ""ToolMessage""], ""lc"": 1, ""type"": ""constructor"", ""kwargs"": {""id"": ""run-6ac4b7e4-defc-4c8b-b81c-5989f0bf2c8e-tool-toolu_01UWd3BW6ScnLLQF52JNZLFN"", ""name"": ""paul_graham_Knowledge_Base"", ""content"": ""[{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I realize that sounds rather wimpy. But attention is a zero sum game. If you can choose what to work on, and you choose a project that's not the best one (or at least a good one) for you, then it's getting in the way of another project that is. And at 50 there was some opportunity cost to screwing around.\\\\n\\\\nI started writing essays again, and wrote a bunch of new ones over the next few months. I even wrote a couple that weren't about startups. Then in March 2015 I started working on Lisp again.\\\\n\\\\nThe distinctive thing about Lisp is that its core is a language defined by writing an interpreter in itself. It wasn't originally intended as a programming language in the ordinary sense. It was meant to be a formal model of computation, an alternative to the Turing machine. If you want to write an interpreter for a language in itself, what's the minimum set of predefined operators you need? The Lisp that John McCarthy invented, or more accurately discovered, is an answer to that question. [19]\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""So I looked around to see what I could salvage from the wreckage of my plans, and there was Lisp. I knew from experience that Lisp was interesting for its own sake and not just for its association with AI, even though that was the main reason people cared about it at the time. So I decided to focus on Lisp. In fact, I decided to write a book about Lisp hacking. It's scary to think how little I knew about Lisp hacking when I started writing that book. But there's nothing like writing a book about something to help you learn it. The book, On Lisp, wasn't published till 1993, but I wrote much of it in grad school.\\\\n\\\\nComputer Science is an uneasy alliance between two halves, theory and systems. The theory people prove things, and the systems people build things. I wanted to build things. I had plenty of respect for theory — indeed, a sneaking suspicion that it was the more admirable of the two halves — but building things seemed so much more exciting.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""The subset I would build as an open source project was the new Lisp, whose parentheses I now wouldn't even have to hide. A lot of Lisp hackers dream of building a new Lisp, partly because one of the distinctive features of the language is that it has dialects, and partly, I think, because we have in our minds a Platonic form of Lisp that all existing dialects fall short of. I certainly did. So at the end of the summer Dan and I switched to working on this new dialect of Lisp, which I called Arc, in a house I bought in Cambridge.\\\\n\\\\nThe following spring, lightning struck. I was invited to give a talk at a Lisp conference, so I gave one about how we'd used Lisp at Viaweb. Afterward I put a postscript file of this talk online, on paulgraham.com, which I'd created years before using Viaweb but had never used for anything. In one day it got 30,000 page views. What on earth had happened? The referring urls showed that someone had posted it on Slashdot. [10]\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""McCarthy didn't realize this Lisp could even be used to program computers till his grad student Steve Russell suggested it. Russell translated McCarthy's interpreter into IBM 704 machine language, and from that point Lisp started also to be a programming language in the ordinary sense. But its origins as a model of computation gave it a power and elegance that other languages couldn't match. It was this that attracted me in college, though I didn't understand why at the time.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""Now they are, though. Now you could continue using McCarthy's axiomatic approach till you'd defined a complete programming language. And as long as every change you made to McCarthy's Lisp was a discoveredness-preserving transformation, you could, in principle, end up with a complete language that had this quality. Harder to do than to talk about, of course, but if it was possible in principle, why not try? So I decided to take a shot at it. It took 4 years, from March 26, 2015 to October 12, 2019. It was fortunate that I had a precisely defined goal, or it would have been hard to keep at it for so long.\\\\n\\\\nI wrote this new Lisp, called Bel, in itself in Arc. That may sound like a contradiction, but it's an indication of the sort of trickery I had to engage in to make this work. By means of an egregious collection of hacks I managed to make something close enough to an interpreter written in itself that could actually run. Not fast, but fast enough to test.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""There weren't any classes in AI at Cornell then, not even graduate classes, so I started trying to teach myself. Which meant learning Lisp, since in those days Lisp was regarded as the language of AI. The commonly used programming languages then were pretty primitive, and programmers' ideas correspondingly so. The default language at Cornell was a Pascal-like language called PL/I, and the situation was similar elsewhere. Learning Lisp expanded my concept of a program so fast that it was years before I started to have a sense of where the new limits were. This was more like it; this was what I had expected college to do. It wasn't happening in a class, like it was supposed to, but that was ok. For the next couple years I was on a roll. I knew what I was going to do.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""McCarthy's 1960 Lisp did nothing more than interpret Lisp expressions. It was missing a lot of things you'd want in a programming language. So these had to be added, and when they were, they weren't defined using McCarthy's original axiomatic approach. That wouldn't have been feasible at the time. McCarthy tested his interpreter by hand-simulating the execution of programs. But it was already getting close to the limit of interpreters you could test that way — indeed, there was a bug in it that McCarthy had overlooked. To test a more complicated interpreter, you'd have had to run it, and computers then weren't powerful enough.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""Interleaf had done something pretty bold. Inspired by Emacs, they'd added a scripting language, and even made the scripting language a dialect of Lisp. Now they wanted a Lisp hacker to write things in it. This was the closest thing I've had to a normal job, and I hereby apologize to my boss and coworkers, because I was a bad employee. Their Lisp was the thinnest icing on a giant C cake, and since I didn't know C and didn't want to learn it, I never understood most of the software. Plus I was terribly irresponsible. This was back when a programming job meant showing up every day during certain working hours. That seemed unnatural to me, and on this point the rest of the world is coming around to my way of thinking, but at the time it caused a lot of friction. Toward the end of the year I spent much of my time surreptitiously working on On Lisp, which I had by this time gotten a contract to publish.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I was nervous about money, because I could sense that Interleaf was on the way down. Freelance Lisp hacking work was very rare, and I didn't want to have to program in another language, which in those days would have meant C++ if I was lucky. So with my unerring nose for financial opportunity, I decided to write another book on Lisp. This would be a popular book, the sort of book that could be used as a textbook. I imagined myself living frugally off the royalties and spending all my time painting. (The painting on the cover of this book, ANSI Common Lisp, is one that I painted around this time.)\\\\n\\\\nThe best thing about New York for me was the presence of Idelle and Julian Weber. Idelle Weber was a painter, one of the early photorealists, and I'd taken her painting class at Harvard. I've never known a teacher more beloved by her students. Large numbers of former students kept in touch with her, including me. After I moved to New York I became her de facto studio assistant.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I had always liked looking at paintings. Could I make them? I had no idea. I'd never imagined it was even possible. I knew intellectually that people made art — that it didn't just appear spontaneously — but it was as if the people who made it were a different species. They either lived long ago or were mysterious geniuses doing strange things in profiles in Life magazine. The idea of actually being able to make art, to put that verb before that noun, seemed almost miraculous.\\\\n\\\\nThat fall I started taking art classes at Harvard. Grad students could take classes in any department, and my advisor, Tom Cheatham, was very easy going. If he even knew about the strange classes I was taking, he never said anything.\\\\n\\\\nSo now I was in a PhD program in computer science, yet planning to be an artist, yet also genuinely in love with Lisp hacking and working away at On Lisp. In other words, like many a grad student, I was working energetically on multiple projects that were not my thesis.\\\""}\""}]"", ""tool_call_id"": ""toolu_01UWd3BW6ScnLLQF52JNZLFN"", ""additional_kwargs"": {}, ""response_metadata"": {}}}]}}, ""event"": ""toolResult""}",2025-06-20 03:05:09.592 -0600
"2a867cc2-c12b-43d0-aba4-d4166566f64c","{""id"": [""langchain_core"", ""messages"", ""AIMessageChunk""], ""lc"": 1, ""type"": ""constructor"", ""event"": ""agentAction"", ""kwargs"": {""id"": ""msg_01Hp3NJf7yfa7MxW5hjTmkmm"", ""content"": [{""text"": ""I'll look into Paul Graham's essay to find information about his initial interest in AI and subsequent disillusionment."", ""type"": ""text"", ""index"": 0}, {""id"": ""toolu_01NePKKSSgmq9xC18jRhp2pY"", ""name"": ""paul_graham_Knowledge_Base"", ""type"": ""tool_use"", ""index"": 1, ""input"": ""{\""input\"": \""Paul Graham initial interest in AI influences disillusionment hoax\""}""}], ""tool_calls"": [{""id"": ""toolu_01NePKKSSgmq9xC18jRhp2pY"", ""args"": {""input"": ""Paul Graham initial interest in AI influences disillusionment hoax""}, ""name"": ""paul_graham_Knowledge_Base"", ""type"": ""tool_call""}], ""usage_metadata"": {""input_tokens"": 4617, ""total_tokens"": 4713, ""output_tokens"": 96, ""input_token_details"": {""cache_read"": 0, ""cache_creation"": 0}}, ""tool_call_chunks"": [{""id"": ""toolu_01NePKKSSgmq9xC18jRhp2pY"", ""args"": ""{\""input\"": \""Paul Graham initial interest in AI influences disillusionment hoax\""}"", ""name"": ""paul_graham_Knowledge_Base"", ""index"": 1}], ""additional_kwargs"": {""id"": ""msg_01Hp3NJf7yfa7MxW5hjTmkmm"", ""role"": ""assistant"", ""type"": ""message"", ""model"": ""claude-3-7-sonnet-20250219"", ""stop_reason"": ""tool_use"", ""stop_sequence"": null}, ""response_metadata"": {""usage"": {""service_tier"": ""standard"", ""cache_read_input_tokens"": 0, ""cache_creation_input_tokens"": 0}}, ""invalid_tool_calls"": []}}",2025-06-20 03:04:20.766 -0600
"2a867cc2-c12b-43d0-aba4-d4166566f64c","{""agent"": ""ShyftOS Agent"", ""chunk"": {""tools"": {""messages"": [{""id"": [""langchain_core"", ""messages"", ""ToolMessage""], ""lc"": 1, ""type"": ""constructor"", ""kwargs"": {""id"": ""run-ec9a7430-db7b-436f-9c16-bde761d21299-tool-toolu_01NePKKSSgmq9xC18jRhp2pY"", ""name"": ""paul_graham_Knowledge_Base"", ""content"": ""[{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I applied to 3 grad schools: MIT and Yale, which were renowned for AI at the time, and Harvard, which I'd visited because Rich Draves went there, and was also home to Bill Woods, who'd invented the type of parser I used in my SHRDLU clone. Only Harvard accepted me, so that was where I went.\\\\n\\\\nI don't remember the moment it happened, or if there even was a specific moment, but during the first year of grad school I realized that AI, as practiced at the time, was a hoax. By which I mean the sort of AI in which a program that's told \\\\\\\""the dog is sitting on the chair\\\\\\\"" translates this into some formal representation and adds it to the list of things it knows.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""For my undergraduate thesis, I reverse-engineered SHRDLU. My God did I love working on that program. It was a pleasing bit of code, but what made it even more exciting was my belief — hard to imagine now, but not unique in 1985 — that it was already climbing the lower slopes of intelligence.\\\\n\\\\nI had gotten into a program at Cornell that didn't make you choose a major. You could take whatever classes you liked, and choose whatever you liked to put on your degree. I of course chose \\\\\\\""Artificial Intelligence.\\\\\\\"" When I got the actual physical diploma, I was dismayed to find that the quotes had been included, which made them read as scare-quotes. At the time this bothered me, but now it seems amusingly accurate, for reasons I was about to discover.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""There weren't any classes in AI at Cornell then, not even graduate classes, so I started trying to teach myself. Which meant learning Lisp, since in those days Lisp was regarded as the language of AI. The commonly used programming languages then were pretty primitive, and programmers' ideas correspondingly so. The default language at Cornell was a Pascal-like language called PL/I, and the situation was similar elsewhere. Learning Lisp expanded my concept of a program so fast that it was years before I started to have a sense of where the new limits were. This was more like it; this was what I had expected college to do. It wasn't happening in a class, like it was supposed to, but that was ok. For the next couple years I was on a roll. I knew what I was going to do.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I got so excited about this idea that I couldn't think about anything else. It seemed obvious that this was the future. I didn't particularly want to start another company, but it was clear that this idea would have to be embodied as one, so I decided to move to Cambridge and start it. I hoped to lure Robert into working on it with me, but there I ran into a hitch. Robert was now a postdoc at MIT, and though he'd made a lot of money the last time I'd lured him into working on one of my schemes, it had also been a huge time sink. So while he agreed that it sounded like a plausible idea, he firmly refused to work on it.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""AI was in the air in the mid 1980s, but there were two things especially that made me want to work on it: a novel by Heinlein called The Moon is a Harsh Mistress, which featured an intelligent computer called Mike, and a PBS documentary that showed Terry Winograd using SHRDLU. I haven't tried rereading The Moon is a Harsh Mistress, so I don't know how well it has aged, but when I read it I was drawn entirely into its world. It seemed only a matter of time before we'd have Mike, and when I saw Winograd using SHRDLU, it seemed like that time would be a few years at most. All you had to do was teach SHRDLU more words.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""Though I liked programming, I didn't plan to study it in college. In college I was going to study philosophy, which sounded much more powerful. It seemed, to my naive high school self, to be the study of the ultimate truths, compared to which the things studied in other fields would be mere domain knowledge. What I discovered when I got to college was that the other fields took up so much of the space of ideas that there wasn't much left for these supposed ultimate truths. All that seemed left for philosophy were edge cases that people in other fields felt could safely be ignored.\\\\n\\\\nI couldn't have put this into words when I was 18. All I knew at the time was that I kept taking philosophy courses and they kept being boring. So I decided to switch to AI.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""So I looked around to see what I could salvage from the wreckage of my plans, and there was Lisp. I knew from experience that Lisp was interesting for its own sake and not just for its association with AI, even though that was the main reason people cared about it at the time. So I decided to focus on Lisp. In fact, I decided to write a book about Lisp hacking. It's scary to think how little I knew about Lisp hacking when I started writing that book. But there's nothing like writing a book about something to help you learn it. The book, On Lisp, wasn't published till 1993, but I wrote much of it in grad school.\\\\n\\\\nComputer Science is an uneasy alliance between two halves, theory and systems. The theory people prove things, and the systems people build things. I wanted to build things. I had plenty of respect for theory — indeed, a sneaking suspicion that it was the more admirable of the two halves — but building things seemed so much more exciting.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I had always liked looking at paintings. Could I make them? I had no idea. I'd never imagined it was even possible. I knew intellectually that people made art — that it didn't just appear spontaneously — but it was as if the people who made it were a different species. They either lived long ago or were mysterious geniuses doing strange things in profiles in Life magazine. The idea of actually being able to make art, to put that verb before that noun, seemed almost miraculous.\\\\n\\\\nThat fall I started taking art classes at Harvard. Grad students could take classes in any department, and my advisor, Tom Cheatham, was very easy going. If he even knew about the strange classes I was taking, he never said anything.\\\\n\\\\nSo now I was in a PhD program in computer science, yet planning to be an artist, yet also genuinely in love with Lisp hacking and working away at On Lisp. In other words, like many a grad student, I was working energetically on multiple projects that were not my thesis.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""What these programs really showed was that there's a subset of natural language that's a formal language. But a very proper subset. It was clear that there was an unbridgeable gap between what they could do and actually understanding natural language. It was not, in fact, simply a matter of teaching SHRDLU more words. That whole way of doing AI, with explicit data structures representing concepts, was not going to work. Its brokenness did, as so often happens, generate a lot of opportunities to write papers about various band-aids that could be applied to it, but it was never going to get us Mike.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I realize that sounds rather wimpy. But attention is a zero sum game. If you can choose what to work on, and you choose a project that's not the best one (or at least a good one) for you, then it's getting in the way of another project that is. And at 50 there was some opportunity cost to screwing around.\\\\n\\\\nI started writing essays again, and wrote a bunch of new ones over the next few months. I even wrote a couple that weren't about startups. Then in March 2015 I started working on Lisp again.\\\\n\\\\nThe distinctive thing about Lisp is that its core is a language defined by writing an interpreter in itself. It wasn't originally intended as a programming language in the ordinary sense. It was meant to be a formal model of computation, an alternative to the Turing machine. If you want to write an interpreter for a language in itself, what's the minimum set of predefined operators you need? The Lisp that John McCarthy invented, or more accurately discovered, is an answer to that question. [19]\\\""}\""}]"", ""tool_call_id"": ""toolu_01NePKKSSgmq9xC18jRhp2pY"", ""additional_kwargs"": {}, ""response_metadata"": {}}}]}}, ""event"": ""toolResult""}",2025-06-20 03:04:21.329 -0600
"50948532-ff52-46d7-9f3c-f48c32834120","{""id"": [""langchain_core"", ""messages"", ""AIMessageChunk""], ""lc"": 1, ""type"": ""constructor"", ""event"": ""agentAction"", ""kwargs"": {""id"": ""msg_0135wG7XXkqivYSdeKSHg83Y"", ""content"": [{""text"": ""I'll look into Paul Graham's essay to identify the specific influences that led him to develop an interest in AI during his college years."", ""type"": ""text"", ""index"": 0}, {""id"": ""toolu_01T7wkhKVjrL7ZhXFdGpo2MV"", ""name"": ""paul_graham_Knowledge_Base"", ""type"": ""tool_use"", ""index"": 1, ""input"": ""{\""input\"": \""Paul Graham college years philosophy AI influences\""}""}], ""tool_calls"": [{""id"": ""toolu_01T7wkhKVjrL7ZhXFdGpo2MV"", ""args"": {""input"": ""Paul Graham college years philosophy AI influences""}, ""name"": ""paul_graham_Knowledge_Base"", ""type"": ""tool_call""}], ""usage_metadata"": {""input_tokens"": 4595, ""total_tokens"": 4689, ""output_tokens"": 94, ""input_token_details"": {""cache_read"": 0, ""cache_creation"": 0}}, ""tool_call_chunks"": [{""id"": ""toolu_01T7wkhKVjrL7ZhXFdGpo2MV"", ""args"": ""{\""input\"": \""Paul Graham college years philosophy AI influences\""}"", ""name"": ""paul_graham_Knowledge_Base"", ""index"": 1}], ""additional_kwargs"": {""id"": ""msg_0135wG7XXkqivYSdeKSHg83Y"", ""role"": ""assistant"", ""type"": ""message"", ""model"": ""claude-3-7-sonnet-20250219"", ""stop_reason"": ""tool_use"", ""stop_sequence"": null}, ""response_metadata"": {""usage"": {""service_tier"": ""standard"", ""cache_read_input_tokens"": 0, ""cache_creation_input_tokens"": 0}}, ""invalid_tool_calls"": []}}",2025-06-20 03:03:52.920 -0600
"50948532-ff52-46d7-9f3c-f48c32834120","{""agent"": ""ShyftOS Agent"", ""chunk"": {""tools"": {""messages"": [{""id"": [""langchain_core"", ""messages"", ""ToolMessage""], ""lc"": 1, ""type"": ""constructor"", ""kwargs"": {""id"": ""run-8d49178a-5ebe-482b-9e0f-a17af2055fcb-tool-toolu_01T7wkhKVjrL7ZhXFdGpo2MV"", ""name"": ""paul_graham_Knowledge_Base"", ""content"": ""[{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""Though I liked programming, I didn't plan to study it in college. In college I was going to study philosophy, which sounded much more powerful. It seemed, to my naive high school self, to be the study of the ultimate truths, compared to which the things studied in other fields would be mere domain knowledge. What I discovered when I got to college was that the other fields took up so much of the space of ideas that there wasn't much left for these supposed ultimate truths. All that seemed left for philosophy were edge cases that people in other fields felt could safely be ignored.\\\\n\\\\nI couldn't have put this into words when I was 18. All I knew at the time was that I kept taking philosophy courses and they kept being boring. So I decided to switch to AI.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""There weren't any classes in AI at Cornell then, not even graduate classes, so I started trying to teach myself. Which meant learning Lisp, since in those days Lisp was regarded as the language of AI. The commonly used programming languages then were pretty primitive, and programmers' ideas correspondingly so. The default language at Cornell was a Pascal-like language called PL/I, and the situation was similar elsewhere. Learning Lisp expanded my concept of a program so fast that it was years before I started to have a sense of where the new limits were. This was more like it; this was what I had expected college to do. It wasn't happening in a class, like it was supposed to, but that was ok. For the next couple years I was on a roll. I knew what I was going to do.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I applied to 3 grad schools: MIT and Yale, which were renowned for AI at the time, and Harvard, which I'd visited because Rich Draves went there, and was also home to Bill Woods, who'd invented the type of parser I used in my SHRDLU clone. Only Harvard accepted me, so that was where I went.\\\\n\\\\nI don't remember the moment it happened, or if there even was a specific moment, but during the first year of grad school I realized that AI, as practiced at the time, was a hoax. By which I mean the sort of AI in which a program that's told \\\\\\\""the dog is sitting on the chair\\\\\\\"" translates this into some formal representation and adds it to the list of things it knows.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""For my undergraduate thesis, I reverse-engineered SHRDLU. My God did I love working on that program. It was a pleasing bit of code, but what made it even more exciting was my belief — hard to imagine now, but not unique in 1985 — that it was already climbing the lower slopes of intelligence.\\\\n\\\\nI had gotten into a program at Cornell that didn't make you choose a major. You could take whatever classes you liked, and choose whatever you liked to put on your degree. I of course chose \\\\\\\""Artificial Intelligence.\\\\\\\"" When I got the actual physical diploma, I was dismayed to find that the quotes had been included, which made them read as scare-quotes. At the time this bothered me, but now it seems amusingly accurate, for reasons I was about to discover.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I had always liked looking at paintings. Could I make them? I had no idea. I'd never imagined it was even possible. I knew intellectually that people made art — that it didn't just appear spontaneously — but it was as if the people who made it were a different species. They either lived long ago or were mysterious geniuses doing strange things in profiles in Life magazine. The idea of actually being able to make art, to put that verb before that noun, seemed almost miraculous.\\\\n\\\\nThat fall I started taking art classes at Harvard. Grad students could take classes in any department, and my advisor, Tom Cheatham, was very easy going. If he even knew about the strange classes I was taking, he never said anything.\\\\n\\\\nSo now I was in a PhD program in computer science, yet planning to be an artist, yet also genuinely in love with Lisp hacking and working away at On Lisp. In other words, like many a grad student, I was working energetically on multiple projects that were not my thesis.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""So I looked around to see what I could salvage from the wreckage of my plans, and there was Lisp. I knew from experience that Lisp was interesting for its own sake and not just for its association with AI, even though that was the main reason people cared about it at the time. So I decided to focus on Lisp. In fact, I decided to write a book about Lisp hacking. It's scary to think how little I knew about Lisp hacking when I started writing that book. But there's nothing like writing a book about something to help you learn it. The book, On Lisp, wasn't published till 1993, but I wrote much of it in grad school.\\\\n\\\\nComputer Science is an uneasy alliance between two halves, theory and systems. The theory people prove things, and the systems people build things. I wanted to build things. I had plenty of respect for theory — indeed, a sneaking suspicion that it was the more admirable of the two halves — but building things seemed so much more exciting.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""AI was in the air in the mid 1980s, but there were two things especially that made me want to work on it: a novel by Heinlein called The Moon is a Harsh Mistress, which featured an intelligent computer called Mike, and a PBS documentary that showed Terry Winograd using SHRDLU. I haven't tried rereading The Moon is a Harsh Mistress, so I don't know how well it has aged, but when I read it I was drawn entirely into its world. It seemed only a matter of time before we'd have Mike, and when I saw Winograd using SHRDLU, it seemed like that time would be a few years at most. All you had to do was teach SHRDLU more words.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""McCarthy didn't realize this Lisp could even be used to program computers till his grad student Steve Russell suggested it. Russell translated McCarthy's interpreter into IBM 704 machine language, and from that point Lisp started also to be a programming language in the ordinary sense. But its origins as a model of computation gave it a power and elegance that other languages couldn't match. It was this that attracted me in college, though I didn't understand why at the time.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I picked applications of continuations as the topic. In retrospect I should have written about macros and embedded languages. There's a whole world there that's barely been explored. But all I wanted was to get out of grad school, and my rapidly written dissertation sufficed, just barely.\\\\n\\\\nMeanwhile I was applying to art schools. I applied to two: RISD in the US, and the Accademia di Belli Arti in Florence, which, because it was the oldest art school, I imagined would be good. RISD accepted me, and I never heard back from the Accademia, so off to Providence I went.\\\\n\\\\nI'd applied for the BFA program at RISD, which meant in effect that I had to go to college again. This was not as strange as it sounds, because I was only 25, and art schools are full of people of different ages. RISD counted me as a transfer sophomore and said I had to do the foundation that summer. The foundation means the classes that everyone has to take in fundamental subjects like drawing, color, and design.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""[18] The worst thing about leaving YC was not working with Jessica anymore. We'd been working on YC almost the whole time we'd known each other, and we'd neither tried nor wanted to separate it from our personal lives, so leaving was like pulling up a deeply rooted tree.\\\\n\\\\n[19] One way to get more precise about the concept of invented vs discovered is to talk about space aliens. Any sufficiently advanced alien civilization would certainly know about the Pythagorean theorem, for example. I believe, though with less certainty, that they would also know about the Lisp in McCarthy's 1960 paper.\\\\n\\\\nBut if so there's no reason to suppose that this is the limit of the language that might be known to them. Presumably aliens need numbers and errors and I/O too. So it seems likely there exists at least one path out of McCarthy's Lisp along which discoveredness is preserved.\\\""}\""}]"", ""tool_call_id"": ""toolu_01T7wkhKVjrL7ZhXFdGpo2MV"", ""additional_kwargs"": {}, ""response_metadata"": {}}}]}}, ""event"": ""toolResult""}",2025-06-20 03:03:53.613 -0600
"87e9451a-ab8e-4901-9851-fe0cb41d8a7c","{""id"": [""langchain_core"", ""messages"", ""AIMessageChunk""], ""lc"": 1, ""type"": ""constructor"", ""event"": ""agentAction"", ""kwargs"": {""id"": ""msg_01MMquLhhZnu9v8zUoVpRfpJ"", ""content"": [{""text"": ""I'll search for information about Paul Graham's early programming experiences from the essay."", ""type"": ""text"", ""index"": 0}, {""id"": ""toolu_01JooFB3LB1LtJRJXwRiEYde"", ""name"": ""paul_graham_Knowledge_Base"", ""type"": ""tool_use"", ""index"": 1, ""input"": ""{\""input\"": \""Paul Graham's first computer for programming, programming language, early challenges\""}""}], ""tool_calls"": [{""id"": ""toolu_01JooFB3LB1LtJRJXwRiEYde"", ""args"": {""input"": ""Paul Graham's first computer for programming, programming language, early challenges""}, ""name"": ""paul_graham_Knowledge_Base"", ""type"": ""tool_call""}], ""usage_metadata"": {""input_tokens"": 4591, ""total_tokens"": 4678, ""output_tokens"": 87, ""input_token_details"": {""cache_read"": 0, ""cache_creation"": 0}}, ""tool_call_chunks"": [{""id"": ""toolu_01JooFB3LB1LtJRJXwRiEYde"", ""args"": ""{\""input\"": \""Paul Graham's first computer for programming, programming language, early challenges\""}"", ""name"": ""paul_graham_Knowledge_Base"", ""index"": 1}], ""additional_kwargs"": {""id"": ""msg_01MMquLhhZnu9v8zUoVpRfpJ"", ""role"": ""assistant"", ""type"": ""message"", ""model"": ""claude-3-7-sonnet-20250219"", ""stop_reason"": ""tool_use"", ""stop_sequence"": null}, ""response_metadata"": {""usage"": {""service_tier"": ""standard"", ""cache_read_input_tokens"": 0, ""cache_creation_input_tokens"": 0}}, ""invalid_tool_calls"": []}}",2025-06-20 03:02:35.810 -0600
"87e9451a-ab8e-4901-9851-fe0cb41d8a7c","{""agent"": ""ShyftOS Agent"", ""chunk"": {""tools"": {""messages"": [{""id"": [""langchain_core"", ""messages"", ""ToolMessage""], ""lc"": 1, ""type"": ""constructor"", ""kwargs"": {""id"": ""run-d1b81fb9-ac9d-4920-9d46-383b063d22b5-tool-toolu_01JooFB3LB1LtJRJXwRiEYde"", ""name"": ""paul_graham_Knowledge_Base"", ""content"": ""[{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""Computers were expensive in those days and it took me years of nagging before I convinced my father to buy one, a TRS-80, in about 1980. The gold standard then was the Apple II, but a TRS-80 was good enough. This was when I really started programming. I wrote simple games, a program to predict how high my model rockets would fly, and a word processor that my father used to write at least one book. There was only room in memory for about 2 pages of text, so he'd write 2 pages at a time and then print them out, but it was a lot better than a typewriter.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I was puzzled by the 1401. I couldn't figure out what to do with it. And in retrospect there's not much I could have done with it. The only form of input to programs was data stored on punched cards, and I didn't have any data stored on punched cards. The only other option was to do things that didn't rely on any input, like calculate approximations of pi, but I didn't know enough math to do anything interesting of that type. So I'm not surprised I can't remember any programs I wrote, because they can't have done much. My clearest memory is of the moment I learned it was possible for programs not to terminate, when one of mine didn't. On a machine without time-sharing, this was a social as well as a technical error, as the data center manager's expression made clear.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""What I Worked On\\\\n\\\\nFebruary 2021\\\\n\\\\nBefore college the two main things I worked on, outside of school, were writing and programming. I didn't write essays. I wrote what beginning writers were supposed to write then, and probably still are: short stories. My stories were awful. They had hardly any plot, just characters with strong feelings, which I imagined made them deep.\\\\n\\\\nThe first programs I tried writing were on the IBM 1401 that our school district used for what was then called \\\\\\\""data processing.\\\\\\\"" This was in 9th grade, so I was 13 or 14. The school district's 1401 happened to be in the basement of our junior high school, and my friend Rich Draves and I got permission to use it. It was like a mini Bond villain's lair down there, with all these alien-looking machines — CPU, disk drives, printer, card reader — sitting up on a raised floor under bright fluorescent lights.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""There weren't any classes in AI at Cornell then, not even graduate classes, so I started trying to teach myself. Which meant learning Lisp, since in those days Lisp was regarded as the language of AI. The commonly used programming languages then were pretty primitive, and programmers' ideas correspondingly so. The default language at Cornell was a Pascal-like language called PL/I, and the situation was similar elsewhere. Learning Lisp expanded my concept of a program so fast that it was years before I started to have a sense of where the new limits were. This was more like it; this was what I had expected college to do. It wasn't happening in a class, like it was supposed to, but that was ok. For the next couple years I was on a roll. I knew what I was going to do.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""McCarthy didn't realize this Lisp could even be used to program computers till his grad student Steve Russell suggested it. Russell translated McCarthy's interpreter into IBM 704 machine language, and from that point Lisp started also to be a programming language in the ordinary sense. But its origins as a model of computation gave it a power and elegance that other languages couldn't match. It was this that attracted me in college, though I didn't understand why at the time.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""With microcomputers, everything changed. Now you could have a computer sitting right in front of you, on a desk, that could respond to your keystrokes as it was running instead of just churning through a stack of punch cards and then stopping. [1]\\\\n\\\\nThe first of my friends to get a microcomputer built it himself. It was sold as a kit by Heathkit. I remember vividly how impressed and envious I felt watching him sitting in front of it, typing programs right into the computer.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""The language we used was an early version of Fortran. You had to type programs on punch cards, then stack them in the card reader and press a button to load the program into memory and run it. The result would ordinarily be to print something on the spectacularly loud printer.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I realize that sounds rather wimpy. But attention is a zero sum game. If you can choose what to work on, and you choose a project that's not the best one (or at least a good one) for you, then it's getting in the way of another project that is. And at 50 there was some opportunity cost to screwing around.\\\\n\\\\nI started writing essays again, and wrote a bunch of new ones over the next few months. I even wrote a couple that weren't about startups. Then in March 2015 I started working on Lisp again.\\\\n\\\\nThe distinctive thing about Lisp is that its core is a language defined by writing an interpreter in itself. It wasn't originally intended as a programming language in the ordinary sense. It was meant to be a formal model of computation, an alternative to the Turing machine. If you want to write an interpreter for a language in itself, what's the minimum set of predefined operators you need? The Lisp that John McCarthy invented, or more accurately discovered, is an answer to that question. [19]\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""So I looked around to see what I could salvage from the wreckage of my plans, and there was Lisp. I knew from experience that Lisp was interesting for its own sake and not just for its association with AI, even though that was the main reason people cared about it at the time. So I decided to focus on Lisp. In fact, I decided to write a book about Lisp hacking. It's scary to think how little I knew about Lisp hacking when I started writing that book. But there's nothing like writing a book about something to help you learn it. The book, On Lisp, wasn't published till 1993, but I wrote much of it in grad school.\\\\n\\\\nComputer Science is an uneasy alliance between two halves, theory and systems. The theory people prove things, and the systems people build things. I wanted to build things. I had plenty of respect for theory — indeed, a sneaking suspicion that it was the more admirable of the two halves — but building things seemed so much more exciting.\\\""}\""},{\""type\"":\""text\"",\""text\"":\""{\\\""pageContent\\\"":\\\""I had to ban myself from writing essays during most of this time, or I'd never have finished. In late 2015 I spent 3 months writing essays, and when I went back to working on Bel I could barely understand the code. Not so much because it was badly written as because the problem is so convoluted. When you're working on an interpreter written in itself, it's hard to keep track of what's happening at what level, and errors can be practically encrypted by the time you get them.\\\\n\\\\nSo I said no more essays till Bel was done. But I told few people about Bel while I was working on it. So for years it must have seemed that I was doing nothing, when in fact I was working harder than I'd ever worked on anything. Occasionally after wrestling for hours with some gruesome bug I'd check Twitter or HN and see someone asking \\\\\\\""Does Paul Graham still code?\\\\\\\""\\\""}\""}]"", ""tool_call_id"": ""toolu_01JooFB3LB1LtJRJXwRiEYde"", ""additional_kwargs"": {}, ""response_metadata"": {}}}]}}, ""event"": ""toolResult""}",2025-06-20 03:02:36.600 -0600
